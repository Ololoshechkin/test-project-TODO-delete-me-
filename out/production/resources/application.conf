prio-dispatcher {
  mailbox-type = "data.MyPriorityActorMailbox"
}


SystemCluster {
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
    cluster {
      seed-nodes = [
        "akka.tcp://ClusterExample@127.0.0.1:2552",
        "akka.tcp://ClusterExample@127.0.0.1:2553",
        "akka.tcp://ClusterExample@127.0.0.1:2554"
      ]
      auto-down = on
    }
    scheduler {
      tick-duration = 33ms
    }
    extensions = [
      "akka.cluster.pubsub.DistributedPubSub"
    ]
    log-dead-letters = 0
  }
}


# Settings for the DistributedPubSub extension
akka.cluster.pub-sub {
  # Actor name of the mediator actor, /system/distributedPubSubMediator
  name = distributedPubSubMediator

  # Start the mediator on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # The routing logic to use for 'Send'
  # Possible values: random, round-robin, broadcast
  routing-logic = random

  # How often the DistributedPubSubMediator should send out gossip information
  gossip-interval = 1s

  # Removed entries are pruned after this duration
  removed-time-to-live = 120s

  # Maximum number of elements to transfer in one message when synchronizing the registries.
  # Next chunk will be transferred in next round of gossip.
  max-delta-elements = 3000

  # The id of the dispatcher to use for DistributedPubSubMediator actors.
  # If not specified default dispatcher is used.
  # If specified you need to define the settings of the actual dispatcher.
  use-dispatcher = ""
}


// UNUSED(OLD) :

SystemMain {
  akka {
    actor {
      deployment {
        /indexActor {
          router = round-robin-pool
          nr-of-instances = 25
        }
      }
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = localhost
        port = 0
      }
    }
  }
}

SystemRemote {
  akka {
    actor {
      deployment {
        indexActor {
          router = consistent-hashing-pool
          nr-of-instances = 5
          virtual-nodes-factor = 10
        }
        /indexActor2 {

        }
      }
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = localhost//"127.0.0.1"//"169.254.146.196"
        port = 2553
      }
    }
  }
}

